-- ========================== 0901 1교시 ==========================

-- 함수 : 컬럼의 값을 읽어서 연산한 결과를 반환

-- 단일 행 함수 : N개의 값을 읽어 N개의 결과를 반환

-- 그룹 함수 : N개의 값을 읽어 1개의 결과를 반환(합계, 평균, 최대, 최소)

-- 함수는  SELECT문의 
-- SELECT절, WHERE절, ORDER BY절, GROUP BY절, HAVING 절에 사용 가능

-------------------- 단일 행 함수 ---------------------------------

-- LENGTH (컬럼명 | 문자열) : 길이 반환
SELECT EMAIL, LENGTH(EMAIL)
FROM EMPLOYEE;

--------------------------------------

-- INSTR(컬럼명 || 문자열, '찾을 문자열' [, 찾기 시작할 위치 ,순번] )
-- 지정할 위치부터 지정한 순번째로 검색되는 문자의 위치를 반환

-- 문자열을 앞에서부터 검색하여 첫 번째 B의 위치를 조회
SELECT INSTR('AABAACAABBAA', 'B') FROM DUAL ; -- 3

-- 문자열을 5번째 문자부터 검색하여 첫번째 B의 위치를 조회
SELECT INSTR('AABAACAABBAA', 'B', 5) FROM DUAL ; -- 9

-- 문자열을 5번째 문자부터 검색하여 두번째 B의 위치를 조회
SELECT INSTR('AABAACAABBAA', 'B', 5, 2) FROM DUAL ; -- 10

-- EMPLOYEE 테이블에서 사원명, 이메일 / 이메일 중 '@(at)' 의 위치 조회
SELECT EMP_NAME, EMAIL, INSTR(EMAIL, '@') 
FROM EMPLOYEE ;

---------------------------------------------------------------------

-- SUBSTR('문자열' | 컬럼명, 잘라내기 시작할 위치 [, 잘라낼 길이]  )
-- 컬럼이나 문자열에서 지정한 위치부터 지정된 길이만큼 문자열을 잘라내서 반환
--> 잘라낼 길이 생략 시 끝까지 잘라냄


-- EMPLOYEE 테이블에서 사원명, 이메일 중 아이디만 조회

-- sun_di @ or.kr
SELECT emp_NAME 사원명, SUBSTR(EMAIL ,1, INSTR(EMAIL, '@') -1 ) 아이디 -- > @ 앞까지 출력
FROM EMPLOYEE ;

---------------------------------------------------------------------
-- TRIM([옵션] '문자열' | 컬럼명 [FROM '문자열'|컬럼명]  )
-- 주어진 컬럼이나 문자열의 앞, 뒤, 양쪽에 있는 지정된 문자를 제거
--> (보통 양쪽 공백 제거에 많이 사용)
-- 옵션 :  LEADING(앞쪽), TRAILING(뒤쪽), BOTH(양쪽, 기본값)

SELECT TRIM( '     H E L L O     ' )
FROM DUAL; -- 양쪽 공백 제거

SELECT TRIM(BOTH'#' FROM '#####안녕#####')
FROM DUAL;




-- ========================== 0901 2교시 ==========================









-- 0901 2교시
-- 0901 3교시
-- 0901 4교시
-- 0901 5교시
-- 0901 6교시
-- 0901 7교시
-- 0901 8교시